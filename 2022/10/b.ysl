var x = 1
var cycle = 0


main:
    gosub *step
    getch
    var c f return
    getch
    getch
    getch
    getch
    lt $c &a
    goto_if *exit
    cmp $c &n
    goto_if *main
    gosub *step
    gosub *read-num
    goto_if *nonnegative
    gosub *read-num
    var j = $i
    var i = 0
    var i - $j
nonnegative:
    var x + $i
    goto *main


read-num:
    var j = 0
    var i = 0
read-num-loop:
    getch
    var a f return
    lt $a &0
    goto_if *read-num-end
    gt $a &9
    goto_if *read-num-end
    var j = 1
    var i * 10
    var i + $a
    var i - 48
    goto *read-num-loop
read-num-end:
    return $j


step:
    var i = $cycle
    var i % 40
    var i - $x
    var i + 1
    lt $i 0
    goto_if *step-no-draw
    gt $i 2
    goto_if *step-no-draw
    putch &#
    goto *step-after-draw
step-no-draw:
    putch &.
step-after-draw:
    var cycle + 1
    var i = $cycle
    var i % 40
    gt $i 0
    goto_if *return
    putch 10
return:
    return


exit:
    exit
